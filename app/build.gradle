apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlinx-serialization'

apply from: './versioning.gradle'

def signingFilePath = './keystore.gradle'
def performSigning = file(signingFilePath).exists()
if (performSigning) {
    apply from: signingFilePath
}

android {
    compileSdkVersion 31
    buildToolsVersion "32.0.0"
//    ndkVersion '23.1.7779620'

    defaultConfig {
        applicationId "me.teble.xposed.autodaily"
        minSdkVersion 24
        //noinspection OldTargetApi
        targetSdkVersion 31
        versionCode mVersionCode
        versionName "3.0.3-fix"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        externalNativeBuild {
            cmake {
                cppFlags "-std=c++14"
                // 静态库内置签名验证
                if (performSigning) {
                    // release 签名
                    cppFlags.add("-DMODULE_SIGNATURE=FF9FF61037FF85BEDDBA5C98A3CB7600")
                } else {
                    // android 默认 debug md5 签名可通过 signingReport 获取
                    cppFlags.add("-DMODULE_SIGNATURE=CB49EE96102F0D9C331AB59A5921AA42")
                }
                arguments "-DANDROID_TOOLCHAIN=clang"
//                        "-DANDROID_STL=c++_shared"
//                        "-DANDROID_CPP_FEATURES=rtti exceptions"
            }
        }
        ndk {
            abiFilters "armeabi-v7a", "arm64-v8a"
        }
    }

    if (performSigning) {
        signingConfigs {
            release {
                storeFile file(project.signing.storeFilePath)
                storePassword project.signing.storePassword
                keyAlias project.signing.keyAlias
                keyPassword project.signing.keyPassword
                v1SigningEnabled true
                v2SigningEnabled true
            }
        }
    }

    buildTypes {
        release {
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            if (performSigning) {
                signingConfig signingConfigs.release
            }
        }
        debug {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            if (performSigning) {
                signingConfig signingConfigs.release
            }
            versionNameSuffix ".$mBuildNum-debug"
        }
        alpha {
            initWith release
            shrinkResources false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            if (performSigning) {
                signingConfig signingConfigs.release
            }
            matchingFallbacks = ['release']
            versionNameSuffix ".$mBuildNum-alpha"
        }
        rc {
            initWith release
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            if (performSigning) {
                signingConfig signingConfigs.release
            }
            matchingFallbacks = ['release']
            versionNameSuffix "-rc"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
        coreLibraryDesugaringEnabled true
    }

    externalNativeBuild {
        cmake {
            path "src/main/cpp/CMakeLists.txt"
            version "3.10.2"
        }
    }

    aaptOptions {
        additionalParameters '--allow-reserved-package-id', '--package-id', '0x62'
    }
    lintOptions {
        abortOnError false
    }

    kotlinOptions {
        jvmTarget = '1.8'
        useIR = true
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
        kotlinCompilerVersion kotlin_version
    }
    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            outputFileName = "XAutoDaily-${versionName}.apk"
        }
    }
}

dependencies {
    implementation project(":mmkv")
    implementation project(":stub")
    implementation fileTree(dir: "libs", include: ["*.jar"])
    testImplementation "junit:junit:4.13.2"
    androidTestImplementation "androidx.test.ext:junit:1.1.3"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.4.0"

    // Xposed
    //noinspection GradleDependency
    implementation "com.github.kyuubiran:EzXHelper:0.6.1"
    compileOnly "de.robv.android.xposed:api:82"

    // Sdk
    coreLibraryDesugaring "com.android.tools:desugar_jdk_libs:1.1.5"

    // jetpack compose
    implementation "androidx.activity:activity-compose:1.4.0"
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.ui:ui-tooling:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    // implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$compose_version"
    // implementation "androidx.compose.runtime:runtime-livedata:$compose_version"
    // implementation "androidx.compose.material:material-icons-extended:$compose_version"
    implementation "androidx.navigation:navigation-compose:2.5.0-alpha04"

    // hutool
    def hutool_version = "5.8.0.M1"
    implementation "cn.hutool:hutool-core:$hutool_version"

    implementation "com.squareup.okhttp3:okhttp:4.9.3"

    // Other
    implementation "com.hankcs:aho-corasick-double-array-trie:1.2.3"
    implementation "net.bytebuddy:byte-buddy-android:1.12.7"
    implementation "com.charleskorn.kaml:kaml:0.36.0"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.2"
    // implementation "org.apache-extras.beanshell:bsh:2.0b6"

    // shizuku
    implementation "dev.rikka.shizuku:api:12.1.0"
    implementation("dev.rikka.shizuku:provider:12.1.0")
}